package employee;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class EmployeeService {
	
	//@Autowired
	//EmployeeRepository employeeRepository;
	List<Employee> list = new ArrayList<>();

	public List<Employee> getAllEmployees() {
		list.add(new Employee("1", "Raman"));
		return list;
	}

	public Employee save(Employee employee ) {
		 //return employeeRepository.save(employee);
		 Employee newEmp = new Employee(employee.getId(), employee.getName());
		 list.add(newEmp);
		 return newEmp;

	}


	public Employee updateEmployee(Employee employee, String id) {

		/*return employeeRepository.findById(id).map(e -> {
	      employee.setName(employee.getName());
	      return employeeRepository.save(employee);
	    }).orElseGet(() -> {
	    	employee.setId(id);
	      return employeeRepository.save(employee);
	    })*/
		list.forEach(e->{
			if(e.getId().equals(id)) {
				e.setName(employee.getName());
			}
		});

		return new Employee(id, employee.getName());
	}

	public void deleteEmployee(String id) {
		list.forEach(e->{
			if(e.getId().equals(id)) {
				list.remove(e);
				return;
			}
		});
		//employeeRepository.deleteById(id);
	}

	public Employee getEmployee(String id) {
		//return employeeRepository.findById(id).get();
		list.forEach(e->{
			if(e.getId().equals(id)) {
				list.remove(e);
				return;
			}
		});
		return new Employee(id, "Raman");
	}
	
	}