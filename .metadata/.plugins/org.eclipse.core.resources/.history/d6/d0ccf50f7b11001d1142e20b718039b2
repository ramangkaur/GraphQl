package employee;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

import com.google.common.base.Predicate;

import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;
import static springfox.documentation.builders.PathSelectors.regex;
import static com.google.common.base.Predicates.or;


@Configuration
@EnableSwagger2
public class SpringFoxConfig extends WebMvcConfigurerAdapter{

	
	@Bean
    public Docket api() { 
        return new Docket(DocumentationType.SWAGGER_2).groupName("public-api").apiInfo(apiInfo())  
          .select()                                  
          .paths(postPaths())                          
          .build();                                           
    }
	
	private Predicate<String> postPaths() {
		return or(regex("/api/posts.*"), regex("/api/employee/.*"));
	}
	
	private ApiInfo apiInfo() {
		return new ApiInfoBuilder().title("employee API")
				.description("employee API reference for developers")
				.termsOfServiceUrl("http://employee.com")
				.contact("employee@gmail.com").license("employee License")
				.licenseUrl("employee@gmail.com").version("1.0").build();
	}
	
	Bean
	  public Docket api() {
	    // @formatter:off
	    //Register the controllers to swagger
	    //Also it is configuring the Swagger Docket
	    return new Docket(DocumentationType.SWAGGER_2).select()
	        // .apis(RequestHandlerSelectors.any())
	        .apis(Predicates.not(RequestHandlerSelectors.basePackage("org.springframework.boot")))
	        // .paths(PathSelectors.any())
	        // .paths(PathSelectors.ant("/swagger2-demo"))
	        .build();
	    // @formatter:on
	  }
	 
	  @Override
	  public void addResourceHandlers(ResourceHandlerRegistry registry) 
	  {
	    //enabling swagger-ui part for visual documentation
	    registry.addResourceHandler("swagger-ui.html").addResourceLocations("classpath:/META-INF/resources/");
	    registry.addResourceHandler("/webjars/**").addResourceLocations("classpath:/META-INF/resources/webjars/");
	  }
}

